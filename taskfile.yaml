version: "3"

vars:
  # could use env var
  PACKAGE_NAME: "proj2md"
  PACKAGE_DIR: "{{.PACKAGE_NAME}}"

tasks:
  venv:
    desc: "Install project venv"
    cmds:
      - uv venv --python 3.13

  install-deps:
    desc: "Install project dependencies from pyproject.toml"
    cmds:
      - uv pip compile pyproject.toml -o requirements.txt
      - |
          if [ -n "$VIRTUAL_ENV" ] || [ -d ".venv" -a -f ".venv/bin/activate" ]; then
            echo "Installing in virtual environment"
            uv pip install -e .
          else
            echo "Installing in system Python"
            uv pip install -e . --system
          fi

  dev-deps:
    desc: "Install development dependencies"
    cmds:
      - uv pip install -e ".[dev]"

  setup-pre-commit:
    desc: "Install pre-commit hooks"
    cmds:
      - uv run pre-commit install

  build-package:
    desc: "Build the PyPI package (runs your build script)"
    cmds:
      - uv build

  test-package:
    desc: "Test if the PyPI package is well published"
    cmds:
      - task: build-package
      - uv run --with {{.PACKAGE_NAME}} --no-project -- python -c 'import {{.PACKAGE_NAME}}; print({{.PACKAGE_NAME}}.__version__)'

  run-tests:
    desc: "Run pytest tests"
    cmds:
      - uv run pytest

  linter:
    desc: "run linter on the project"
    cmds:
      - |
          uv run ruff format . && uv run ruff check --select I --fix . && uv run ruff check . --fix

  clean:
    desc: "Remove build artifacts and cache directories"
    cmds:
      - rm -rf dist {{.PACKAGE_NAME}}.egg-info
      - find . -type d -name "__pycache__" -exec rm -rf {} +
      - find . -type d -name "*.egg-info" -exec rm -rf {} +

  clean-all:
    desc: "Deep clean venv and dist"
    cmds:
      - task: clean
      # Clean up virtual environment
      - rm -rf .venv
      - rm -rf dist

  bump-version:
    desc: "Bump package version (type: major, minor, or patch)"
    cmds:
      - SKIP=pytest bump2version {{.CLI_ARGS}}

  setup-dev:
    desc: "Setup development environment"
    cmds:
      - task: venv
      - task: install-deps
      - task: dev-deps
      - task: setup-pre-commit
